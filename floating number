import torchvision.models as models
import torch
from matplotlib import pyplot as plt

def plot_kernels(tensor, num_cols=6):
    if not tensor.ndim==4:
        raise Exception("assumes a 4D tensor")
    if not tensor.shape[-1]==3:
        raise Exception("last dim needs to be 3 to plot")
    number_kernels = tensor.shape[0]
    number_rows = 1+ number_kernels // num_cols           
    fig = plt.figure(figsize=(num_cols,number_rows))
    for i in range(tensor.shape[0]):
        nan1 = fig.add_subplot(number_rows,num_cols,i+1)
        nan1.imshow(tensor[i])
        nan1.axis('off')
        nan1.set_xticklabels([])
        nan1.set_yticklabels([])

    plt.subplots_adjust(wspace=0.1, hspace=0.1)
    plt.show()
bhh = models.vgg16(pretrained=True) 
bhy = bhh.double()
filters = bhy.modules
body_type = [i for i in bhy.children()][0]
layer = body_type[0]
tensor = layer.weight.data.numpy()
plot_kernels(tensor)
